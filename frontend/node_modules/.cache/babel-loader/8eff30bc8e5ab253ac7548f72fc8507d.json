{"ast":null,"code":"var _jsxFileName = \"/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/components/LoginFormPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport profile from '../../images/profile-png.png';\nimport email from '../../images/email-png.png';\nimport pass from '../../images/pass-png.png';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFormPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profile,\n              alt: \"profile\",\n              className: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: email,\n                alt: \"email\",\n                className: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"name\",\n                  type: \"text\",\n                  value: credential,\n                  onChange: e => setCredential(e.target.value),\n                  required: true,\n                  placeholder: \"Username or Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"pass\",\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true,\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginFormPage, \"35RtPegWafitHGFBjsXVi+HKR4w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginFormPage;\nexport default LoginFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"sources":["/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/components/LoginFormPage/index.js"],"names":["React","useState","sessionActions","useDispatch","useSelector","Redirect","profile","email","pass","LoginFormPage","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","json","map","error","idx","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport profile from '../../images/profile-png.png';\nimport email from '../../images/email-png.png';\nimport pass from '../../images/pass-png.png';\n\nimport './LoginForm.css';\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return (\n        <Redirect to='/' />\n    );\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .catch(async (res) => {\n                const data = await res.json();\n                if (data && data.errors) setErrors(data.errors);\n            });\n    }\n\n\n\n    return (\n        <div className='container'>\n            <div className='sub-container'>\n                <div>\n                    <div className='img'>\n                        <div className='img-container'>\n                            <img src={profile} alt='profile' className='profile' />\n                        </div>\n                    </div>\n\n                    <form onSubmit={handleSubmit} className='login-form' >\n                        <ul>\n                            {errors.map((error, idx) => (\n                                <li key={idx}>{error}</li>\n                            ))}\n                        </ul>\n                        <div >\n                            <h2>Login</h2>\n                            <div>\n                                <img src={email} alt='email' className='email' />\n                                <label >\n                                    <input className='name'\n                                        type='text'\n                                        value={credential}\n                                        onChange={(e) => setCredential(e.target.value)}\n                                        required\n                                        placeholder='Username or Email'\n                                    />\n                                </label>\n                            </div>\n                            <label >\n                                <input className='pass'\n                                    type='password'\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                    placeholder='Password'\n                                />\n                            </label>\n                        </div>\n                        <button type='submit' className='button'>Log In</button>\n                    </form>\n                </div >\n            </div>\n        </div>\n    );\n};\n\n\nexport default LoginFormPage;"]},"metadata":{},"sourceType":"module"}