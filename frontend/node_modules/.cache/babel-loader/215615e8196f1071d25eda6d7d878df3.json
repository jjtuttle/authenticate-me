{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = user => {\n  return {\n    type: SET_USER,\n    payload: user\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER\n  };\n};\n\nconst initialState = {\n  user: null\n};\n\nconst sessionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n}; // ===========================================================================\n// ASSOCIATIONS\n// ===========================================================================\n// ===========================================================================\n// LOGIN\n// ===========================================================================\n\n\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n}; // ===========================================================================\n// SIGNUP\n// ===========================================================================\n\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n}; // ===========================================================================\n// LOGOUT\n// ===========================================================================\n\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(removeUser());\n  return response;\n};\nexport default sessionReducer;","map":{"version":3,"sources":["/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/store/session.js"],"names":["csrfFetch","SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","initialState","sessionReducer","state","action","newState","Object","assign","login","dispatch","credential","password","response","method","body","JSON","stringify","data","json","signup","username","email","logout"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,QAAQ,GAAG,iBAAjB;AACA,MAAMC,WAAW,GAAG,oBAApB;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,QADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMG,UAAU,GAAG,MAAM;AACvB,SAAO;AACLF,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJD;;AAQA,MAAMM,YAAY,GAAG;AAAEJ,EAAAA,IAAI,EAAE;AAAR,CAArB;;AAEA,MAAMK,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AACvD,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACN,IAAf;AACE,SAAKJ,QAAL;AACEW,MAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAX;AACAE,MAAAA,QAAQ,CAACR,IAAT,GAAgBO,MAAM,CAACL,OAAvB;AACA,aAAOM,QAAP;;AACF,SAAKV,WAAL;AACEU,MAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAX;AACAE,MAAAA,QAAQ,CAACR,IAAT,GAAgB,IAAhB;AACA,aAAOQ,QAAP;;AACF;AACE,aAAOF,KAAP;AAVJ;AAYD,CAdD,C,CAgBA;AACA;AACA;AAEA;AACA;AACA;;;AACA,OAAO,MAAMK,KAAK,GAAIX,IAAD,IAAU,MAAOY,QAAP,IAAoB;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2Bd,IAAjC;AACA,QAAMe,QAAQ,GAAG,MAAMnB,SAAS,CAAC,cAAD,EAAiB;AAC/CoB,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,UADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAFyC,GAAjB,CAAhC;AAOA,QAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAT,EAAAA,QAAQ,CAACb,OAAO,CAACqB,IAAI,CAACpB,IAAN,CAAR,CAAR;AACA,SAAOe,QAAP;AACD,CAZM,C,CAeP;AACA;AACA;;AACA,OAAO,MAAMO,MAAM,GAAItB,IAAD,IAAU,MAAOY,QAAP,IAAoB;AAClD,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBV,IAAAA;AAAnB,MAAgCd,IAAtC;AACA,QAAMe,QAAQ,GAAG,MAAMnB,SAAS,CAAC,YAAD,EAAe;AAC7CoB,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBI,MAAAA,QADmB;AAEnBC,MAAAA,KAFmB;AAGnBV,MAAAA;AAHmB,KAAf;AAFuC,GAAf,CAAhC;AAQA,QAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAT,EAAAA,QAAQ,CAACb,OAAO,CAACqB,IAAI,CAACpB,IAAN,CAAR,CAAR;AACA,SAAOe,QAAP;AACD,CAbM,C,CAeP;AACA;AACA;;AACA,OAAO,MAAMU,MAAM,GAAG,MAAM,MAAOb,QAAP,IAAoB;AAC9C,QAAMG,QAAQ,GAAG,MAAMnB,SAAS,CAAC,cAAD,EAAiB;AAC/CoB,IAAAA,MAAM,EAAE;AADuC,GAAjB,CAAhC;AAGAJ,EAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACA,SAAOY,QAAP;AACD,CANM;AAYP,eAAeV,cAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\n\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\n// ===========================================================================\n// ASSOCIATIONS\n// ===========================================================================\n\n// ===========================================================================\n// LOGIN\n// ===========================================================================\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n\n// ===========================================================================\n// SIGNUP\n// ===========================================================================\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n// ===========================================================================\n// LOGOUT\n// ===========================================================================\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE',\n  });\n  dispatch(removeUser());\n  return response;\n};\n\n\n\n\n\nexport default sessionReducer;"]},"metadata":{},"sourceType":"module"}