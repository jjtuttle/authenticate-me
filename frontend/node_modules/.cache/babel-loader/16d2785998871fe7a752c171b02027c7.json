{"ast":null,"code":"var _jsxFileName = \"/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/components/LoginFormPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFormPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-input\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: [\"Username or Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                value: credential,\n                onChange: e => setCredential(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-input\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button\",\n              children: \" Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginFormPage, \"35RtPegWafitHGFBjsXVi+HKR4w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginFormPage;\nexport default LoginFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"sources":["/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/components/LoginFormPage/index.js"],"names":["React","useState","sessionActions","useDispatch","useSelector","Redirect","LoginFormPage","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","json","map","error","idx","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport './LoginForm.css';\n\nconst LoginFormPage = () => {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [credential, setCredential] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    if(sessionUser) return (\n        <Redirect to='/' />\n    );\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setErrors([]);\n        return dispatch(sessionActions.login({ credential, password }))\n            .catch(async (res) => {\n                const data = await res.json();\n                if(data && data.errors) setErrors(data.errors);\n            });\n    }\n    \n\n\n    return (\n    <div className='container'>\n        <div className='sub-container'>\n            <div>\n                <div className=''></div>\n        <form onSubmit={handleSubmit} className='login-form' >\n            <ul>\n                {errors.map((error, idx) => (\n                    <li key={idx}>{error}</li>\n                ))}\n            </ul>\n            <div ><h2>Login</h2></div>\n            <div className='flex-input'>\n            <label className='label'>\n                Username or Email\n                <input className='input'\n                    type='text'\n                    value={credential}\n                    onChange={(e) => setCredential(e.target.value)}\n                    required\n                />\n            </label>\n            </div>\n            <div className='flex-input'>\n            <label className='label'>\n                Password\n                <input className='input'\n                    type='password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            </div>\n            <div>\n            <button type='submit' className='button'> Log In</button>\n            </div>\n        </form> \n            </div>\n        </div>\n    </div>\n    );\n};\n\n\nexport default LoginFormPage;"]},"metadata":{},"sourceType":"module"}