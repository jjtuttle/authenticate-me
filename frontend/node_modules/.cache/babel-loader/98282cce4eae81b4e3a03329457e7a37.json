{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nconst rootReducer = combineReducers({\n  // add reducer functions here\n  session: sessionReducer\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","rootReducer","session","sessionReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAClC;AACAK,EAAAA,OAAO,EAAEC;AAFyB,CAAD,CAAnC;AAKA,IAAIC,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGN,eAAe,CAACE,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMQ,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+Cd,OADjD;AAEAK,EAAAA,QAAQ,GAAGO,gBAAgB,CAACb,eAAe,CAACE,KAAD,EAAQQ,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOnB,WAAW,CAACK,WAAD,EAAcc,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAaA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n\n\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  // add reducer functions here\n  session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\n\n\n\n\n\n\n\n\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}