{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { restoreCSRF, csrfFetch } from './store/csrf';\nimport thunk from \"redux-thunk\";\nconst store = configureStore();\nconst rootReducer = combineReducers({// add reducer functions here\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/jamestuttle/aa/Module-5-Resources/authenticate-me/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","restoreCSRF","csrfFetch","thunk","store","configureStore","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,KAAK,GAAGC,cAAc,EAA5B;AAGA,MAAMC,WAAW,GAAGR,eAAe,CAAC,CAClC;AADkC,CAAD,CAAnC;AAIA,IAAIS,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGR,eAAe,CAACI,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMQ,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+ChB,OADjD;AAEAO,EAAAA,QAAQ,GAAGO,gBAAgB,CAACf,eAAe,CAACI,KAAD,EAAQQ,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMN,cAAc,GAAIY,cAAD,IAAoB;AACzC,SAAOpB,WAAW,CAACS,WAAD,EAAcW,cAAd,EAA8BV,QAA9B,CAAlB;AACD,CAFD;;AAMA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCT,EAAAA,WAAW;AAEXc,EAAAA,MAAM,CAACb,SAAP,GAAmBA,SAAnB;AACAa,EAAAA,MAAM,CAACX,KAAP,GAAeA,KAAf;AACD;;AAOD,eAAeC,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { restoreCSRF, csrfFetch } from './store/csrf';\n\nimport thunk from \"redux-thunk\";\n\n\nconst store = configureStore();\n\n\nconst rootReducer = combineReducers({\n  // add reducer functions here\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\n\n\nif (process.env.NODE_ENV !== 'production') {\n  restoreCSRF();\n\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n}\n\n\n\n\n\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}